#!/usr/bin/env python3

import sys
import os

sys.path.append(os.path.abspath('.'))

import http.server
import socketserver
import datetime
import time

from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

from generatore.SiteBuilder import SiteBuilder
from generatore.Utils import slug_creator

class ContentHandler(FileSystemEventHandler):
    def __init__(self, site):
        self.site = site
    def on_modified(self, event):
        print(f'{event.src_path} has been {event.event_type}')
        self.site.build_site()

def usage():
    print('usage: generatore <command>\n')
    print('Generatore creates static websites.\n')
    print('Available commands:')
    print('\t{:10}\t{}'.format('create DIR', 'create a new site'))
    print('\t{:10}\t{}'.format('post "..."', 'create a new post with metadata'))
    print('\t{:10}\t{}'.format('build', 'build the site inside the output directory'))
    print('\t{:10}\t{}'.format('listen', 'auto-build the site inside the output directory'))
    print('\t{:10}\t{}'.format('serve', 'generate content and start a webserver'))

if (len(sys.argv) > 1):
    site = object()
    if (sys.argv[1] == 'create'):
        try:
            title = sys.argv[2]
            config_path = os.path.join(os.getcwd(), title, 'config')

            os.mkdir(title)

            with open(config_path, 'w') as writer:
                writer.write('{\n\t"site_name": "Your new site"\n}\n')
            
            site = SiteBuilder(open(config_path, 'r').read(), os.path.join(os.getcwd(), title))
        except Exception as e:
            print(e)
            usage()
            print('\nDirectory not empty.')
    elif (sys.argv[1] == 'post'):
        try:
            title = sys.argv[2]

            with open(os.path.join(os.getcwd(), 'content', 'posts', slug_creator(title) + '.md'), 'w+') as writer:
                writer.write('---\ntitle: {}\ndate: {}\n---\n'.format(title, datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')))
        except IndexError:
            usage()
    elif (sys.argv[1] == 'build'):
        site = SiteBuilder()
        site.build_site()
    elif (sys.argv[1] == 'listen'):
        content_handler = ContentHandler(SiteBuilder())
        observer = Observer()
        observer.schedule(content_handler, path=os.path.join(os.getcwd(), 'content'), recursive=True)
        observer.start()

        print('Listening for changes...')

        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            observer.stop()
        observer.join()
    elif (sys.argv[1] == 'serve'):
        web_dir = os.path.join(os.getcwd(), 'output')
        os.chdir(web_dir)
        with socketserver.TCPServer(("", 9999), http.server.SimpleHTTPRequestHandler) as httpd:
            print('Serving at http://localhost:9999')
            httpd.serve_forever()

    else:
        usage()
else:
    usage()